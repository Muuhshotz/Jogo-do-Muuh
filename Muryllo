<!doctype html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Jogo: Acerta o Alvo</title>
  <style>
    :root{--bg:#0f1724;--card:#0b1220;--accent:#06b6d4;--muted:#94a3b8}
    *{box-sizing:border-box}
    body{margin:0;font-family:Inter,system-ui,Segoe UI,Roboto,'Helvetica Neue',Arial;background:linear-gradient(180deg,var(--bg),#071021);color:#e6eef8;display:flex;align-items:center;justify-content:center;height:100vh}
    .container{width:920px;max-width:96%;background:linear-gradient(180deg,rgba(255,255,255,0.02),rgba(255,255,255,0.01));border-radius:12px;padding:18px;box-shadow:0 6px 30px rgba(2,6,23,0.6);display:grid;grid-template-columns:300px 1fr;gap:16px}
    .panel{background:rgba(255,255,255,0.02);padding:12px;border-radius:10px}
    h1{font-size:20px;margin:0 0 8px}
    .hud{display:flex;flex-direction:column;gap:10px}
    .stat{display:flex;justify-content:space-between;align-items:center;padding:8px;background:rgba(255,255,255,0.01);border-radius:8px}
    button{background:var(--accent);border:none;color:#052026;padding:10px 12px;border-radius:8px;font-weight:600;cursor:pointer}
    button:disabled{opacity:.45;cursor:default}
    #gameArea{background:linear-gradient(180deg,#071428,#03202b);border-radius:10px;position:relative;overflow:hidden;height:560px;display:flex;align-items:center;justify-content:center}
    #target{position:absolute;width:64px;height:64px;border-radius:50%;background:conic-gradient(from 0deg,#06b6d4,#60a5fa,#06b6d4);display:flex;align-items:center;justify-content:center;box-shadow:0 6px 20px rgba(6,182,212,0.12);cursor:pointer}
    #target::after{content:'';width:26px;height:26px;border-radius:50%;background:rgba(255,255,255,0.85);opacity:.12}
    .controls{display:flex;gap:8px;flex-wrap:wrap}
    label{display:flex;gap:6px;align-items:center}
    input[type=range]{width:120px}
    .footer{font-size:13px;color:var(--muted);margin-top:8px}
    @media(max-width:720px){.container{grid-template-columns:1fr;grid-auto-rows:auto}#gameArea{height:380px}}
  </style>
</head>
<body>
  <div class="container">
    <div class="panel hud">
      <h1>Acerta o Alvo ðŸŽ¯</h1>
      <div class="stat"><span>PontuaÃ§Ã£o</span><strong id="score">0</strong></div>
      <div class="stat"><span>Tempo restante</span><strong id="time">30</strong></div>
      <div class="stat"><span>Alvos acertados</span><strong id="hits">0</strong></div>

      <div style="display:flex;gap:8px;margin-top:6px">
        <button id="startBtn">Iniciar</button>
        <button id="stopBtn" disabled>Parar</button>
      </div>

      <div style="margin-top:10px">
        <div style="display:flex;justify-content:space-between"><small>Velocidade</small><small id="speedLabel">MÃ©dia</small></div>
        <input id="speed" type="range" min="300" max="1200" value="700">
      </div>

      <div style="margin-top:10px">
        <div style="display:flex;justify-content:space-between"><small>Tamanho do alvo</small><small id="sizeLabel">MÃ©dio</small></div>
        <input id="size" type="range" min="30" max="120" value="64">
      </div>

      <div class="footer">Clique no cÃ­rculo que aparece â€” cada acerto soma pontos. Aperte Iniciar para comeÃ§ar.</div>
    </div>

    <div class="panel" style="padding:10px;display:flex;flex-direction:column">
      <div id="gameArea">
        <div id="target" style="display:none"></div>
        <div id="overlay" style="position:absolute;text-align:center;color:rgba(255,255,255,0.06);font-size:80px;font-weight:800">ðŸŽ®</div>
      </div>
      <div style="margin-top:12px;display:flex;gap:12px;align-items:center">
        <div>Melhores: <span id="bestScore">0</span></div>
        <div style="margin-left:auto;color:var(--muted)">VersÃ£o simples â€” pode pedir melhorias</div>
      </div>
    </div>
  </div>

  <script>
    // Jogo: Acerta o Alvo
    const startBtn = document.getElementById('startBtn');
    const stopBtn = document.getElementById('stopBtn');
    const target = document.getElementById('target');
    const gameArea = document.getElementById('gameArea');
    const scoreEl = document.getElementById('score');
    const timeEl = document.getElementById('time');
    const hitsEl = document.getElementById('hits');
    const bestScoreEl = document.getElementById('bestScore');
    const speedRange = document.getElementById('speed');
    const sizeRange = document.getElementById('size');
    const speedLabel = document.getElementById('speedLabel');
    const sizeLabel = document.getElementById('sizeLabel');

    let score=0, hits=0, timeLeft=30;
    let interval=null, moveTimeout=null;
    let running=false;

    // Load best score from localStorage
    const BEST_KEY = 'acerta_alvo_best';
    let best = parseInt(localStorage.getItem(BEST_KEY) || '0');
    bestScoreEl.textContent = best;

    function rand(min,max){return Math.floor(Math.random()*(max-min+1))+min}

    function placeTarget(){
      const rect = gameArea.getBoundingClientRect();
      const tSize = parseInt(sizeRange.value);
      const x = rand(0, Math.max(0, rect.width - tSize));
      const y = rand(0, Math.max(0, rect.height - tSize));
      target.style.width = tSize+'px';
      target.style.height = tSize+'px';
      target.style.left = x+'px';
      target.style.top = y+'px';
      target.style.display = 'flex';
    }

    function scheduleMove(){
      clearTimeout(moveTimeout);
      const delay = parseInt(speedRange.value);
      moveTimeout = setTimeout(()=>{
        if(!running) return;
        placeTarget();
        scheduleMove();
      }, delay);
    }

    function startGame(){
      score=0;hits=0;timeLeft=30;running=true;
      scoreEl.textContent = score;hitsEl.textContent = hits;timeEl.textContent = timeLeft;
      startBtn.disabled=true;stopBtn.disabled=false;
      placeTarget();
      scheduleMove();
      interval = setInterval(()=>{
        timeLeft--;
        timeEl.textContent = timeLeft;
        if(timeLeft<=0) stopGame();
      },1000);
      document.getElementById('overlay').style.opacity = '0.08';
    }

    function stopGame(){
      running=false;
      startBtn.disabled=false;stopBtn.disabled=true;
      clearInterval(interval);clearTimeout(moveTimeout);
      target.style.display='none';
      document.getElementById('overlay').style.opacity = '1';
      if(score>best){best=score;localStorage.setItem(BEST_KEY,best);bestScoreEl.textContent=best}
      alert('Fim! Sua pontuaÃ§Ã£o: '+score);
    }

    target.addEventListener('click', (e)=>{
      if(!running) return;
      // pontos base: depende do tamanho e velocidade
      const size = parseInt(sizeRange.value);
      const speed = parseInt(speedRange.value);
      const points = Math.max(1, Math.round(200/size + 1000/speed));
      score += points; hits++;
      scoreEl.textContent = score; hitsEl.textContent = hits;

      // efeito visual simples
      const pop = document.createElement('div');
      pop.textContent = '+'+points;
      pop.style.position='absolute';
      pop.style.left=e.clientX - gameArea.getBoundingClientRect().left + 'px';
      pop.style.top=e.clientY - gameArea.getBoundingClientRect().top + 'px';
      pop.style.transform='translate(-50%,-120%)';
      pop.style.fontWeight='700';
      pop.style.opacity='1';
      pop.style.pointerEvents='none';
      gameArea.appendChild(pop);
      setTimeout(()=>{pop.style.transition='all 700ms ease';pop.style.top=(parseInt(pop.style.top)-40)+'px';pop.style.opacity='0';},10);
      setTimeout(()=>pop.remove(),800);

      // reposiciona alvo imediatamente
      placeTarget();
      scheduleMove();
    });

    startBtn.addEventListener('click', startGame);
    stopBtn.addEventListener('click', stopGame);

    speedRange.addEventListener('input', ()=>{
      const v = parseInt(speedRange.value);
      if(v<500) speedLabel.textContent='RÃ¡pido';
      else if(v<900) speedLabel.textContent='MÃ©dio';
      else speedLabel.textContent='Lento';
    });
    sizeRange.addEventListener('input', ()=>{
      const v = parseInt(sizeRange.value);
      if(v<45) sizeLabel.textContent='Pequeno';
      else if(v<85) sizeLabel.textContent='MÃ©dio';
      else sizeLabel.textContent='Grande';
    });

    // Ajuste para tocar com toque (mobile)
    target.addEventListener('touchstart', (e)=>{e.preventDefault();target.click();});

    // Inicial no centro
    placeTarget();
  </script>
</body>
</html>
